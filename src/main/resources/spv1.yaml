openapi: 3.0.0
info:
  title: SwanPipe API
  description: API for the SwanPipe Backend
  version: 1.0.0
paths:
  /login:
    post:
      summary: Performs a login
      operationId: login
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
              properties:
                loginId:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
  /login-account:
    get:
      summary: Gets information on the login account.
      operationId: loginAccount
      responses:
        200:
          description: JSON object with login account information
          content:
            application/json:
              schema:
                type: object
                required:
                  - loginId
                  - created
                properties:
                  loginId:
                    type: string
                  created:
                    type: string
                    description: Human readable date and time of creation
  /account-info:
    get:
      summary: Gets account information including linked actors
      operationId: accountInfo
      responses:
        200:
          description: JSON object with account information, including linked actors
          content:
            application/json:
              schema:
                type: object
                required:
                  - loginId
                  - created
                  - enabled
                  - data
                  - actors
                properties:
                  loginId:
                    type: string
                  created:
                    type: string
                    description: Human readable date and time of creation
                  enabled:
                    type: boolean
                    description: true if the account is enabled for login
                  data:
                    type: object
                    description: contains information about the account
                  actors:
                    type: array
                    items:
                      type: object
                      required:
                        - pun
                        - owner
                      properties:
                        pun:
                          type: string
                          description: preferred user name of actor
                        owner:
                          type: boolean
                          description: true if this account owns the actor
  /signup-token:
    get:
      summary: Gets a signup token which must be presented during signup.
      operationId: signupToken
      security: []
      responses:
        200:
          description: Returns a signup token and signup information
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                  - openRegistration
                properties:
                  token:
                    type: string
                  openRegistration:
                    type: boolean
                    description: if false, open registration is not allowed
  /signup:
    post:
      summary: Signs a user up for a login account
      operationId: signup
      security: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - loginId
                - password
                - email
                - pun
                - token
              properties:
                loginId:
                  type: string
                  description: the login ID of the user
                password:
                  type: string
                  description: the password to use when logging in
                email:
                  type: string
                  description: email of the login account, possibly used to confirm the account
                pun:
                  type: string
                  description: Preferred User Name (PUN) of the actor to create for the login account
                token:
                  type: string
                  description: signup token acquired using the /signup-token operation
      responses:
        201:
          description: Login account created
          content:
            application/json:
              schema:
                type: object
                required:
                  - confirmationRequired
                  - email
                properties:
                  confirmationRequired:
                    type: boolean
                    description: true if confirmation is required
                  email:
                    type: string
                    description: >
                      if confirmation is required, this property contains the email
                      address to which the confirmation was sent.
        401:
          description: >
            Signup was not allowed, possibly due to a bad token or open registration not being open.
        409:
          description: Signup of this login account or actor name conflicts with one already registered
          content:
            application/json:
              schema:
                type: object
                required:
                  - conflict
                properties:
                  conflict:
                    type: string
                    description: Contains the reason for the conflict, either "loginId" or "pun"


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      in: header

security:
  - BearerAuth
